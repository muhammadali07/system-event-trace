# development only
name: set-observability

networks:
  set_net :
    name: set_net
    driver: bridge
    external: true

services:
  postgres:
      image: postgres:latest
      restart: always
      container_name: set_database
      environment:
        POSTGRES_DB: set_dev
        POSTGRES_USER: set_user
        POSTGRES_PASSWORD: set_password
      ports:
        - "5432:5432"

  cassandra:
    image: cassandra
    container_name: set-cassandra
    environment:
      - CASSANDRA_START_RPC=true
    ports:
      - 7700:7700
      - 9042:9042
    networks:
      - set_net

  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema
    container_name: set_cassandra-schema
    depends_on:
      - cassandra
    networks:
    - set_net
  
  prometheus:
    image: prom/prometheus
    container_name: set-prometheus
    volumes:
      - ../build/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - set_net

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: set-otel-collector
    volumes:
      - ../build/opentelemetry/otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml
    command: --config /etc/otelcol/otel-collector-config.yml
    ports:
      - 4318:4318
      - 8889:8889
    networks:
      - set_net
    depends_on:
      - cassandra
  
  jaeger-collector:
    image: jaegertracing/jaeger-collector
    container_name: set-jaeger-collector
    ports:
      - 14269:14269
    environment:
      - SPAN_STORAGE_TYPE=cassandra
      - CASSANDRA_SERVERS=cassandra
      - CASSANDRA_KEYSPACE=jaeger_v1_dc1
    networks:
      - set_net
    depends_on:
      - otel-collector

  jaeger-query:
    image: jaegertracing/jaeger-query
    container_name: set-jaeger-query
    ports:
      - 16686:16686
      - 16687:16687
    environment:
      - SPAN_STORAGE_TYPE=cassandra
      - CASSANDRA_SERVERS=cassandra
      - CASSANDRA_KEYSPACE=jaeger_v1_dc1
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      - PROMETHUES_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
    networks:
      - set_net
    depends_on:
      - otel-collector

  kafka:
    image: bitnami/kafka:latest
    container_name: set-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 
    depends_on:
      - zookeeper

  zookeeper:
    image: zookeeper:latest
    container_name: set-zookeeper
    ports:
      - "2181:2181"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: set-kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=localhost:9092

